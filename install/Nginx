#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### VARs
gsRutorrentDirEscaped="$(echo $gsRutorrentDir | sed s,/,\\\\\/,g)"
gsRutorrentPluginsDirEscaped="$(echo $gsRutorrentPluginsDir | sed s,/,\\\\\/,g)"
LoadavgDirEscaped="$(echo $gsLoadAvgDir | sed s,/,\\\\\/,g)"

#### STOP services
gfnManageServices stop "nginx $binPhpService"

#### Install packages
gfnPackageBundleInstall 'nginx-extras'

#### STOP services
gfnManageServices stop "nginx $binPhpService"

#### Create directories & remove some files
if [ ! -d /etc/nginx/sites-available ]; then mkdir -v /etc/nginx/sites-available; fi
if [ ! -d /etc/nginx/sites-enabled ]; then mkdir -v /etc/nginx/sites-enabled; fi
if [ ! -d /etc/nginx/modules-enabled ]; then mkdir -v /etc/nginx/modules-enabled; fi
if [ ! -d /etc/nginx/passwd ]; then mkdir -v /etc/nginx/passwd; fi
if [ ! -d /etc/nginx/locations ]; then mkdir -v /etc/nginx/locations; fi
if [ ! -d /etc/nginx/rpc ]; then mkdir -v /etc/nginx/rpc; fi
if [ ! -d /etc/nginx/proxy ]; then mkdir -v /etc/nginx/proxy; fi
if [ ! -d /etc/nginx/upstream ]; then mkdir -v /etc/nginx/upstream; fi
rm -f /etc/nginx/locations/*
rm -f /etc/nginx/conf.d/*

#### Restore config files if needed
if [ -d /opt/MySB/temp/nginx ]; then
    mv -v $MySB_InstallDir/temp/nginx/locations/* /etc/nginx/locations/
    mv -v $MySB_InstallDir/temp/nginx/proxy/* /etc/nginx/proxy/
    mv -v $MySB_InstallDir/temp/nginx/rpc/* /etc/nginx/rpc/
    mv -v $MySB_InstallDir/temp/nginx/sites_available/* /etc/nginx/sites-available/
    mv -v $MySB_InstallDir/temp/nginx/sites_enabled/* /etc/nginx/sites-enabled/
    mv -v $MySB_InstallDir/temp/nginx/upstream/* /etc/nginx/upstream/
    rm -rfv $MySB_InstallDir/temp/nginx
fi

#### /etc/nginx/passwd/MySB
if [ -n "$gsMySB_User" ] && [ -f /etc/nginx/passwd/MySB ]; then
    sed -i "/${gsMySB_User}/d" /etc/nginx/passwd/MySB
fi
sPassword="$(gfnGenPassword 16)"
sUser="$(gfnGenPassword 8)"
cmdMySQL 'MySB_db' "UPDATE system SET mysb_user = '$sUser', mysb_password = '$sPassword' WHERE id_system='1';" -v
if [ ! -f /etc/nginx/passwd/MySB ]; then
    touch /etc/nginx/passwd/MySB
fi
htpasswd -bs /etc/nginx/passwd/MySB $sUser $sPassword &>/dev/null
chmod -v 640 /etc/nginx/passwd/MySB
chown -v www-data:www-data /etc/nginx/passwd/MySB

#### Certificates
if ([ -f ${MySB_InstallDir}/ssl/mysb.key ] && [ -f ${MySB_InstallDir}/ssl/mysb.cert ]); then
    echo "	ssl_certificate_key ${MySB_InstallDir}/ssl/mysb.key;" >/etc/nginx/snippets/mysb_selfsigned.conf
    echo "	ssl_certificate ${MySB_InstallDir}/ssl/mysb.cert;" >>/etc/nginx/snippets/mysb_selfsigned.conf
    echo "	include snippets/mysb_selfsigned.conf;" >/etc/nginx/ssl_certificate
fi
if [[ -f /etc/nginx/snippets/letsencrypt_${gsHostNameFqdn}.conf ]]; then
    echo "	include snippets/letsencrypt_${gsHostNameFqdn}.conf;" >/etc/nginx/ssl_certificate
fi
chmod 0600 /etc/nginx/ssl_certificate

#### nginx.conf
install -v -o root -g root -m 0600 ${MySB_InstallDir}/templates/nginx/etc.nginx.mime.types.tmpl /etc/nginx/mime.types
install -v -o root -g root -m 0600 ${MySB_InstallDir}/templates/nginx/etc.nginx.logs_format.tmpl /etc/nginx/logs_format
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.nginx.conf.tmpl /etc/nginx/nginx.conf
perl -pi -e "s/worker_processes auto;/worker_processes $gsProcessors;/g" /etc/nginx/nginx.conf

#### Default Server
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.site-enabled.default.tmpl /etc/nginx/sites-available/default
perl -pi -e "s/<InstallDir>/$gsInstallDirEscaped/g" /etc/nginx/sites-available/default
perl -pi -e "s/<gsPort_MySB_HTTPS>/$gsPort_MySB_HTTPS/g" /etc/nginx/sites-available/default
perl -pi -e "s/<gsPort_System_HTTP>/$gsPort_System_HTTP/g" /etc/nginx/sites-available/default
perl -pi -e "s/<server_name>/$gsHostNameFqdn/g" /etc/nginx/sites-available/default
perl -pi -e "s/<rutorrent_dir>/$gsRutorrentDirEscaped/g" /etc/nginx/sites-available/default
perl -pi -e "s/<plugins_dir>/$gsRutorrentPluginsDirEscaped/g" /etc/nginx/sites-available/default
perl -pi -e "s/<loadavg_dir>/$LoadavgDirEscaped/g" /etc/nginx/sites-available/default
perl -pi -e "s/<php_fpm_sock>/\/run\/php\/php-fpm7.0.sock/g" /etc/nginx/sites-available/default

#### Work in progress page
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.site-enabled.WiP.tmpl /etc/nginx/sites-available/WiP
perl -pi -e "s/<InstallDir>/$gsInstallDirEscaped/g" /etc/nginx/sites-available/WiP
perl -pi -e "s/<gsPort_MySB_HTTPS>/$gsPort_MySB_HTTPS/g" /etc/nginx/sites-available/WiP
perl -pi -e "s/<gsPort_System_HTTP>/$gsPort_System_HTTP/g" /etc/nginx/sites-available/WiP
perl -pi -e "s/<server_name>/$gsHostNameFqdn/g" /etc/nginx/sites-available/WiP
perl -pi -e "s/<php_fpm_sock>/\/run\/php\/php-fpm7.0.sock/g" /etc/nginx/sites-available/WiP

#### PHP conf.d
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.global_deny_access.tmpl /etc/nginx/conf.d/global_deny_access
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.ip_restriction.tmpl /etc/nginx/conf.d/ip_restriction
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.static_files.tmpl /etc/nginx/conf.d/static_files
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.auth_basic.tmpl /etc/nginx/conf.d/auth_basic
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.php-ssl.tmpl /etc/nginx/conf.d/php-ssl
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.conf.d.php.tmpl /etc/nginx/conf.d/php

#### Upstream
install -v -o root -g root -m 0600 $MySB_InstallDir/templates/nginx/etc.nginx.upstream.php7.default.conf.tmpl /etc/nginx/upstream/default.conf

#### logrotate
gfnLogRotate 'nginx'

#### Wolf CMS
gfnGetRepoValues 'Wolf CMS' && gfnRepoManageByType
install -v -o root -g www-data -m 0640 $MySB_InstallDir/templates/mysb/wolf.config.php.tmpl $MySB_InstallDir/web/config.php
install -v -o root -g www-data -m 0640 $MySB_InstallDir/templates/mysb/wolf.page.php.tmpl $MySB_InstallDir/web/wolf/app/models/Page.php
AdminDir="$(gfnGenPassword 32)"
perl -pi -e "s/<admin_dir>/$AdminDir/g" $MySB_InstallDir/web/config.php
perl -pi -e "s/<gsTimeZone>/$gsTimeZoneEscaped/g" $MySB_InstallDir/web/config.php

#### Sudo
rm -vf /etc/sudoers.d/MySB_nginx
echo "www-data ALL = (root) NOPASSWD: /bin/bash $MySB_InstallDir/scripts/ApplyConfig.bsh*" | tee -a /etc/sudoers.d/MySB_nginx

#### Add www-data to MySB_users group
addgroup www-data MySB_users

#### Remove errors logs
# rm -f /var/log/nginx/error.log
rm -f /var/log/nginx/*-error.log

#### NextCloud
if [ "$gbToInstall_NextCloud" == "YES" ] || [ "$gbIsInstalled_NextCloud" == "YES" ]; then
    install -v -g root -o root -m 0644 $MySB_InstallDir/templates/nginx/etc.nginx.locations.nextcloud.conf.tmpl /etc/nginx/locations/NextCloud.conf
    perl -pi -e "s/<MySB_InstallDir>/$gsInstallDirEscaped/g" /etc/nginx/locations/NextCloud.conf
fi

#### Tautulli
if [ "$gbToInstall_PlexMedia" == "YES" ] || [ "$gbIsInstalled_PlexMedia" == "YES" ]; then
    install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nginx/etc.nginx.locations.tautulli.conf.tmpl /etc/nginx/locations/Tautulli.conf
    install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nginx/etc.nginx.proxy.tautulli.conf.tmpl /etc/nginx/proxy/Tautulli.conf
    perl -pi -e "s/<MainUser>/$gsMainUserName/g" /etc/nginx/locations/Tautulli.conf
fi

#### START services
gfnManageServices start "$binPhpService nginx"

# -----------------------------------------
# shellcheck source=inc/includes_after
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
