#!/bin/bash
# rev 5.5
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
{ [ -z "${vars}" ] || [ "${vars}" -ne 1 ]; } && {
    echo "Please load 'vars' file before..."
    return
}
##################### FIRST LINE #####################################

#### Get ruTorrent Trackers
gfnGetRutorrentTrackers() {
    local sAllEngines
    sAllEngines="$(ls -1r "${gsRutorrentPluginsDir}"/extsearch/engines/)"

    for FnEngine in $sAllEngines; do
        Tracker="$(grep '$url' "$gsRutorrentPluginsDir/extsearch/engines/$FnEngine" | grep "\=" | grep "http" | head -1 | sed 's/public//g;' | awk '{ print $3 }' | cut -d "/" -f 3 | cut -d "'" -f 1)"
        if [ -n "$Tracker" ]; then
            gfnAddTracker "$Tracker" "rutorrent"
        fi
    done
}

#### Get Users Trackers
gfnGetUsersTrackers() {
    local sUsersTrackers

    sUsersTrackers="$(cmdMySQL 'MySB_db' "SELECT tracker FROM trackers_list WHERE origin='users';")"
    for FnTracker in $sUsersTrackers; do
        if [ -n "$FnTracker" ]; then
            gfnAddTracker "$FnTracker" "users"
        fi
    done
}

#### Get Active Torrent's tracker
gfnGetActiveTrackers() {
    local sTrackerList sUrl sTracker
    sTrackerList=()

    if gfnCheckCommand 0 aria2c; then
        OIFS=$IFS
        IFS=$'\n'
        for file in $(find /home/*/rtorrent/ -name '*.torrent' -type f | grep -v 'torrents/' | grep -v 'watch/'); do
            for sUrl in $(aria2c -S "${file}" | grep 'announce' | grep -v 'Magnet URI' | grep -v 'udp' | sed -e 's/ //g;'); do
                sTracker=$(echo "$sUrl" | cut -d '/' -f 3 | cut -d ':' -f 1)
                sTrackerList+=("$sTracker")
            done
        done
        IFS=$OIFS
        unset IFS OIFS

        # Uniq
        mapfile -t sTrackerList < <(echo "${sTrackerList[*]}" | tr ' ' '\n' | sort | uniq)

        # Add trackers
        for sTracker in "${sTrackerList[@]}"; do
            [ -n "$sTracker" ] && gfnAddTracker "$sTracker" 'users' 1
        done
    fi
}

#### Add new trackers
gfnAddTracker() {
    local sTracker sOrigin sPart1 sPart2 sPart3 sTrackerDomain aDomainIPv4 aTrackerIPv4 sTrackerAddress sIfExist sTrackersListId bTrackerFound bActive

    sTracker="$1"
    sOrigin="$2"
    if [ -n "$3" ] && [ "$3" -eq 1 ]; then
        bTrackerFound=1
        bActive=1
    else
        bTrackerFound=0
        bActive=0
    fi
    aDomainIPv4=()
    aTrackerIPv4=()

    if [ -n "${sTracker}" ]; then
        sPart1="$(echo "${sTracker}" | cut -d "." -f 1)"
        sPart2="$(echo "${sTracker}" | cut -d "." -f 2)"
        sPart3="$(echo "${sTracker}" | cut -d "." -f 3)"

        if [ -z "$sPart3" ]; then
            sTrackerDomain="$sPart1.$sPart2"
            sTrackerAddress="${sTrackerDomain}"
        else
            sTrackerDomain="$sPart2.$sPart3"
            sTrackerAddress="$sPart1.${sTrackerDomain}"
        fi

        # 1/ Check 'given_hostname.domain.com'
        # 2/ Check 'domain.com'
        if [ -n "${sTrackerDomain}" ]; then
            mapfile -t aDomainIPv4 < <(nslookup "${sTrackerDomain}" | grep 'Address:' | awk '{ print $2 }' | tail -n +2 | sed -e 's/^ //g;' | sed 's/\s+$//')

            if [ "${#aDomainIPv4[@]}" -gt 0 ]; then
                sIfExist="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';")"
                if [ -z "$sIfExist" ]; then
                    log_daemon_msg "${AddTrackerDomain} ${sTrackerDomain}"
                    case "${sOrigin}" in
                        'rutorrent') cmdMySQL 'MySB_db' "INSERT INTO trackers_list (tracker,tracker_domain,origin,is_active,to_check) VALUES ('${sTrackerAddress}','${sTrackerDomain}','${sOrigin}','0','0');" ;;
                        *)
                            cmdMySQL 'MySB_db' "INSERT INTO trackers_list (tracker,tracker_domain,origin,is_active) VALUES ('${sTrackerAddress}','${sTrackerDomain}','${sOrigin}','${bActive}');"
                            if [ "${bTrackerFound}" -eq 1 ] && [ "${bActive}" -eq 1 ]; then
                                gfnSendMail "MySB - New trackers founded !" "${gsMainUserName}" 'tracker_found'
                            fi
                            ;;
                    esac
                    gfnStatusLSB
                fi

                mapfile -t aTrackerIPv4 < <(nslookup "${sTrackerAddress}" | grep 'Address:' | awk '{ print $2 }' | tail -n +2 | sed -e 's/^ //g;' | sed 's/\s+$//')
            else
                sIfExist="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';")"
                if [ -n "$sIfExist" ]; then
                    log_daemon_msg "${DeleteTrackerDomain} ${sTrackerDomain}"
                    sTrackersListId="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';")"
                    cmdMySQL 'MySB_db' "DELETE FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';"
                    gfnStatusLSB
                fi
            fi

            if [ "${#sTrackerIPv4[@]}" -gt 0 ]; then
                sTrackersListId="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';")"
                if [ -n "${sTrackersListId}" ] && [ "${sTrackersListId}" -gt 0 ]; then
                    log_daemon_msg "${UpdateTrackersIPv4} '${sTrackerAddress}' --> '${aTrackerIPv4[*]}'"
                    # Cleaning
                    ListIPv4="$(cmdMySQL 'MySB_db' "SELECT ipv4 FROM trackers_list_ipv4 WHERE id_trackers_list='${sTrackersListId}';")"
                    for IPv4 in $ListIPv4; do
                        if (! grep -q "${IPv4}" <<<${sTrackerIPv4[*]}); then
                            cmdMySQL 'MySB_db' "DELETE FROM trackers_list_ipv4 WHERE ipv4='${IPv4}' AND id_trackers_list='${sTrackersListId}';"
                        fi
                    done
                    unset IPv4 ListIPv4

                    # Add
                    for IPv4 in "${aTrackerIPv4[@]}"; do
                        case "${IPv4}" in
                            '127.0.0.1' | '0.0.0.0') continue ;;
                            *)
                                sIfExist="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list_ipv4 FROM trackers_list_ipv4 WHERE id_trackers_list='${sTrackersListId}' AND ipv4='${IPv4}';")"
                                if [ -z "$sIfExist" ]; then
                                    cmdMySQL 'MySB_db' "INSERT INTO trackers_list_ipv4 (id_trackers_list,ipv4) VALUES ('${sTrackersListId}','${IPv4}');"
                                fi
                                ;;
                        esac
                    done
                    unset IPv4 aTrackerIPv4
                    cmdMySQL 'MySB_db' "UPDATE trackers_list SET tracker='${sTrackerAddress}' WHERE tracker_domain='${sTrackerDomain}';"
                    gfnStatusLSB
                fi
            else
                if [ "${#aDomainIPv4[@]}" -gt 0 ]; then
                    sTrackersListId="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list FROM trackers_list WHERE tracker_domain='${sTrackerDomain}';")"
                    if [ -n "${sTrackersListId}" ] && [ "${sTrackersListId}" -gt 0 ]; then
                        log_daemon_msg "$UpdateTrackersIPv4 '${sTrackerDomain}' --> '${aDomainIPv4[*]}'"
                        # Cleaning
                        ListIPv4="$(cmdMySQL 'MySB_db' "SELECT ipv4 FROM trackers_list_ipv4 WHERE id_trackers_list='${sTrackersListId}';")"
                        for IPv4 in $ListIPv4; do
                            if (! grep -q "${IPv4}" <<<${aDomainIPv4[*]}); then
                                cmdMySQL 'MySB_db' "DELETE FROM trackers_list_ipv4 WHERE ipv4='${IPv4}' AND id_trackers_list='${sTrackersListId}';"
                            fi
                        done
                        unset IPv4 ListIPv4
                        # Add
                        for IPv4 in "${aDomainIPv4[@]}"; do
                            case "${IPv4}" in
                                '127.0.0.1' | '0.0.0.0') continue ;;
                                *)
                                    sIfExist="$(cmdMySQL 'MySB_db' "SELECT id_trackers_list_ipv4 FROM trackers_list_ipv4 WHERE id_trackers_list='${sTrackersListId}' AND ipv4='${IPv4}';")"
                                    if [ -z "$sIfExist" ]; then
                                        cmdMySQL 'MySB_db' "INSERT INTO trackers_list_ipv4 (id_trackers_list,ipv4) VALUES ('${sTrackersListId}','${IPv4}');"
                                    fi
                                    ;;
                            esac
                        done
                        unset IPv4 aDomainIPv4
                        cmdMySQL 'MySB_db' "UPDATE trackers_list SET tracker='${sTrackerDomain}' WHERE tracker_domain='${sTrackerDomain}';"
                        gfnStatusLSB
                    fi
                fi
            fi
        fi
    fi
}

##################### LAST LINE ######################################
